                            

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #sbsr-1592 {
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            /* changes to 1280px at desktop */
            max-width: calc(550 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }
  
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            max-width: calc(630 / 16 * 1rem);
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
  
        .cs-text {
            margin-bottom: calc(16 / 16 * 1rem);
            &:last-of-type {
                margin-bottom: calc(32 / 16 * 1rem);
            }
        }
  
        .cs-button-solid {
            font-size: calc(16 / 16 * 1rem);
            /* 46px - 56px */
            line-height: clamp(2.875rem, 5.5vw, 3.5rem);
            text-decoration: none;
        font-weight: 700;
          text-align: center;
            margin: 0;
            color: #fff;
            min-width: calc(150 / 16 * 1rem);
            padding: 0 calc(48 / 16 * 1rem);
            background-color: var(--primary);
            display: inline-block;
            position: relative;
            z-index: 1;
            /* prevents padding from adding to the width */
            box-sizing: border-box;
  
            &:before {
                content: '';
                position: absolute;
                height: 100%;
                width: 0%;
                background: #000;
                opacity: 1;
                top: 0;
                left: 0;
                z-index: -1;
                transition: width .3s;
            }
  
            &:hover {
                &:before {
                    width: 100%;
                }
            }
        }
  
        .cs-image-group {
            /* scales the whole group based on the view width size and stop when that vales equals .745em, resets at desktop */
            font-size: min(1.959vw, .745em);
            width: calc(630 / 16 * 1em);
            /* we set a minimum height so it never gets smaller than this value */
            min-height: calc(628 / 16 * 1em);
            display: block;
            position: relative;
            z-index: 1;
        }
  
        .cs-picture {
            position: absolute;
  
            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }
  
        .cs-picture1 {
            /* the percentage heights allow them to be responsive to the height of the parent cs-image-group. On desktop, when the felxbox is set to aling-items: stretch, the cs-image group will stretch to fill the height of the parent container. So when you add more content to the cs-content group and make it taller, the cs-image group will get taller with it and every image will stretch with the parent, making this entire group responsive to the changing amounts of content next to it */
            width: calc(413 / 16 * 1em);
            height: 79.617834%;
            top: 0;
            right: 0;
            z-index: -1;
        }
  
        .cs-picture2 {
            width: calc(413 / 16 * 1em);
            height: 44.585987%;
            bottom: 0;
            left: 0;
            z-index: 10;
        }
    }
  }
  
  /* Tablet 768px */
  @media only screen and (min-width: 48rem) {
    #sbsr-1592 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;
        }
  
        .cs-content {
            /* this padding sets a minimum gap between the top and bottom of the content div and the top and bottom of the cs-image-group */
            padding: calc(60 / 16 * 1rem) 0;
            /* while the cs-image-group will stretch to fill the height of the parent, this property will ensure that the cs-content group aligns itse;f in the center of the parent div instead of stretching */
            align-self: center;
        }
  
        .cs-image-group {
            font-size: min(1.2vw, 1em);
            flex: none;
            /* sends it to the right in the 2nd position */
            order: 2;
        }
    }
  }
                                
  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #sbsr-1599 {
        padding: var(--sectionPadding);
        
        .cs-container {
            width: 100%;
            /* changes to 1280px at tablet */
            max-width: calc(584 / 16 * 1rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }
  
        .cs-content {
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;
            display: flex;
            flex-direction: column;
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
        }
    
        .cs-topper {
            font-size: var(--topperFontSize);
            line-height: 1.2em;
            text-transform: uppercase;
            text-align: inherit;
            letter-spacing: .1em;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: calc(4 / 16 * 1rem);
            display: block;
        }
    
        .cs-title {
            font-size: var(--headerFontSize);
            font-weight: 900;
            line-height: 1.2em;
            text-align: inherit;
            max-width: calc(700 / 16 * 1rem);
            margin: 0 0 calc(16 / 16 * 1rem) 0;
            color: var(--headerColor);
            position: relative;
        }
    
        .cs-text {
            font-size: var(--bodyFontSize);
            line-height: 1.5em;
            text-align: inherit;
            width: 100%;
            max-width: calc(650 / 16 * 1rem);
            margin: 0;
            color: var(--bodyTextColor);
        }
  
        .cs-text {
            /* Override.  cs-topper cs-title and first cs-text should be removed and put into your global css sheet so it can control every instance of them on your site and is consistent. This selector is a section specific override that stays inside this stitch */
            margin-bottom: calc(16 / 16 * 1rem);
            &:last-of-type {
                margin-bottom: calc(32 / 16 * 1rem);
            }
        }
  
        .cs-picture {
            width: 100%;
            display: block;
            position: relative;
            z-index: 1;
  
            img {
                width: 100%;
                height: 100%;
                object-fit: cover;
                position: absolute;
                top: 0;
                left: 0;
            }
        }
  
        .cs-picture1 {
            height: 95vw;
            max-height: calc(400 / 16 * 1rem);
        }
  
        .cs-picture2 {
            height: 111vw;
            max-height: calc(500 / 16 * 1rem);
        }
  
        .cs-stats-group {
            width: 100%;
            display: flex;
            flex-direction: column;
            /* 28px - 40px */
            gap: clamp(1.75rem, 3vw, 2.5rem);
        }
  
        .cs-stats {
            width: 100%;
            max-width: calc(630 / 16 * 1rem);
            padding: 0;
            margin: 0;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            row-gap: calc(24 / 16 * 1rem);
            column-gap: calc(12 / 16 * 1rem);
        }
        
        .cs-stat {
            list-style: none;
            margin: 0;
            padding: 0 0 calc(24 / 16 * 1rem) 0;
            border-bottom: 1px solid var(--primary);
            /* making flex so we can align a heading with 1 line to the bottom */
            display: flex;
            grid-column: span 4;
            flex-direction: column;
            align-self: stretch;
            align-content: space-between;
        }
    
        .cs-number {
            /* 31px - 39px */
            font-size: clamp(1.9375rem, 3vw, 2.4375rem);
            line-height: 1.2em;
            font-weight: 700;
            text-align: left;
            color: var(--headerColor);
            display: block;
            margin: 0 0 calc(4 / 16 * 1rem) 0;
        }
    
        .cs-desc {
            font-size: calc(16 / 16 * 1rem);
            line-height: 1.5em;
            font-weight: 400;
            text-align: left;
            /* auto margin top will push text to bottom if there's only one line */
            margin: 0;
            color: var(--bodyTextColor);
        }
    }
  }
  
  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #sbsr-1599 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
            flex-direction: row;
            justify-content: space-between;
            align-items: stretch;
        }
  
        .cs-content {
            /* sends it to the right in the 2nd position */
            order: 2;
        }
  
        .cs-picture1 {
            /* 340px - 460px */
            min-height: clamp(21.25rem, 35vw, 28.75rem);
            height: 100%;
            max-height: 100%;
        }
  
        .cs-picture2 {
            /* 530px - 660px */
            min-height: clamp(33.125rem, 45vw, 41.25rem);
            height: 100%;
            max-height: 100%;
        }
    }
  }
                                
  
  /*-- -------------------------- -->
  <---           Hero             -->
  <--- -------------------------- -*/
  
  /* Mobile - 360px */
  @media only screen and (min-width: 0rem) {
    #hero-1619 {
      padding: var(--sectionPadding);
      /* 200px - 300px - leaving extra space for the navigation */
      padding-top: clamp(12.5rem, 31.95vw, 18.75rem);
      position: relative;
      z-index: 1;
    }
    #hero-1619 .cs-container {
      width: 100%;
      max-width: 80rem;
      margin: auto;
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
      /* 60px - 180px */
      gap: clamp(3.75rem, 13vw, 11.25rem);
    }
    #hero-1619 .cs-content {
      /* set text align to left if content needs to be left aligned */
      text-align: left;
      width: 100%;
      max-width: 48.75rem;
      display: flex;
      flex-direction: column;
      /* centers content horizontally, set to flex-start to left align */
      align-items: flex-start;
    }
    #hero-1619 .cs-topper {
      /* 13px - 16px */
      font-size: clamp(0.8125rem, 1.5vw, 1rem);
      line-height: 1.2em;
      font-weight: 700;
      letter-spacing: 0.1em;
      text-align: center;
      text-transform: uppercase;
      margin-bottom: 0.25rem;
      color: var(--primary);
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 0.5rem;
      position: relative;
    }
    #hero-1619 .cs-chevron {
      --chevronColor: var(--primary);
      width: 3rem;
      height: auto;
    }
    #hero-1619 .cs-title {
      /* 39px - 61px */
      font-size: clamp(2.4375rem, 6.4vw, 3.8125rem);
      font-weight: 700;
      line-height: 1.2em;
      text-align: inherit;
      max-width: 100%;
      margin: 0 0 2.5rem 0;
      color: #fff;
      position: relative;
    }
    #hero-1619 .cs-text {
      /* 16px - 20px */
      font-size: clamp(1rem, 1.95vw, 1.25rem);
      line-height: 1.5em;
      text-align: inherit;
      width: 100%;
      /* 464px - 622px */
      max-width: clamp(29rem, 60vw, 38.785rem);
      margin: 0 0 2.5rem 0;
      color: #fff;
    }
    #hero-1619 .cs-button-solid {
      font-size: 1rem;
      /* 46px - 56px */
      line-height: clamp(2.875rem, 5.5vw, 3.5rem);
      text-decoration: none;
      font-weight: 700;
      margin: 0;
      color: #fff;
      padding: 0 1.5rem;
      background-color: var(--primary);
      display: inline-block;
      position: relative;
      z-index: 1;
    }
    #hero-1619 .cs-button-solid:before {
      content: '';
      position: absolute;
      display: block;
      height: 100%;
      width: 0%;
      background: #000;
      opacity: 1;
      top: 0;
      left: 0;
      z-index: -1;
      transition: width .3s;
    }
    #hero-1619 .cs-button-solid:hover:before {
      width: 100%;
    }
    #hero-1619 .cs-card-group {
      margin: 0;
      padding: 0;
      width: 100%;
      display: grid;
      grid-template-columns: repeat(12, 1fr);
      /* 16px - 20px */
      gap: clamp(1rem, 2.3vw, 1.25rem);
    }
    #hero-1619 .cs-item {
      width: 100%;
      text-align: left;
      list-style: none;
      margin: 0;
      /* 24px - 32px */
      padding: clamp(1.5rem, 3vw, 2rem);
      background-color: #fff;
      box-shadow: 0px 12px 80px 0px rgba(26, 26, 26, 0.08);
      /* prevents padding from affecting height and width */
      box-sizing: border-box;
      grid-column: span 12;
      grid-row: span 1;
      display: flex;
      flex-direction: column;
      align-items: flex-start;
      justify-content: center;
      position: relative;
      z-index: 1;
    }
    #hero-1619 .cs-icon {
      width: 3rem;
      height: auto;
      margin: 0 0 1.5rem 0;
    }
    #hero-1619 .cs-h3 {
      /* 20px - 25px */
      font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
      line-height: 1.2em;
      font-weight: bold;
      text-align: inherit;
      margin: 0 0 1rem 0;
      color: var(--headerColor);
    }
    #hero-1619 .cs-item-text {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1.5vw, 1rem);
      line-height: 1.5em;
      max-width: 28.125rem;
      margin: 0;
      padding: 0;
      color: var(--bodyTextColor);
    }
    #hero-1619 .cs-background {
      width: 100%;
      height: 55%;
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -2;
    }
    #hero-1619 .cs-background:before {
      /* Overlay */
      content: '';
      width: 100%;
      height: 100%;
      background: #111926;
      opacity: .8;
      position: absolute;
      display: block;
      top: 0;
      left: 0;
      z-index: 1;
      /* prevents the cursor from interacting with it */
      pointer-events: none;
    }
    #hero-1619 .cs-background img {
      position: absolute;
      top: 0;
      left: 0;
      height: 100%;
      width: 100%;
      object-fit: cover;
      /* makes the top of the image start at the top of the parent */
      object-position: top;
    }
  }
  /* Tablet - 768px */
  @media only screen and (min-width: 48rem) {
    #hero-1619 {
      padding-bottom: 0;
    }
    #hero-1619 .cs-container {
      align-items: flex-start;
    }
    #hero-1619 .cs-content {
      text-align: left;
      margin-left: 0;
      align-items: flex-start;
    }
    #hero-1619 .cs-item {
      grid-column: span 6;
    }
    #hero-1619 .cs-background {
      height: 87%;
    }
    #hero-1619 .cs-background:before {
      background: linear-gradient(90deg, #111926 21.41%, rgba(17, 25, 38, 0.72) 34.98%, rgba(17, 25, 38, 0) 62.53%);
      opacity: 1;
    }
  }
  /* Large Desktop - 1300px */
  @media only screen and (min-width: 81.25rem) {
    #hero-1619 .cs-item {
      grid-column: span 3;
    }
  }
  /* Large Desktop Parallax Effect - 100px */
  @media only screen and (min-width: 100rem) {
    #hero-1619 .cs-background {
      background: url("../../../assets/header-img.jpg");
      background-size: cover;
      background-position: center;
      background-repeat: no-repeat;
      /* creates the parallax effect */
      background-attachment: fixed;
    }
    #hero-1619 .cs-background img {
      display: none;
    }
  }
                                